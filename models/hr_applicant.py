# -*- coding: utf-8 -*-
from odoo import models, fields, api, _
from odoo.exceptions import UserError

class HrApplicant(models.Model):
    _inherit = 'hr.applicant'

    # üìå –°—Ç–∞–¥–∏—è 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –≤ —à—Ç–∞—Ç
    expected_salary = fields.Float(string="–û–∂–∏–¥–∞–µ–º–∞—è –∑–∞—Ä–ø–ª–∞—Ç–∞")
    employment_date = fields.Date(string="–î–∞—Ç–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞")
    trial_start = fields.Date(string="–ù–∞—á–∞–ª–æ –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞")
    trial_end = fields.Date(string="–û–∫–æ–Ω—á–∞–Ω–∏–µ –∏—Å–ø—ã—Ç–∞—Ç–µ–ª—å–Ω–æ–≥–æ —Å—Ä–æ–∫–∞")
    phone = fields.Char(string="–¢–µ–ª–µ—Ñ–æ–Ω")
    recruiter_id = fields.Many2one('res.users', string="–°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ –ø–æ–¥–±–æ—Ä—É –∫–∞–¥—Ä–æ–≤")
    birth_date = fields.Date(string="–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è")
    company_id = fields.Many2one('res.company', string="–ö–æ–º–ø–∞–Ω–∏—è")

    # üìå –°—Ç–∞–¥–∏—è 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –æ—Ç –∫–∞–Ω–¥–∏–¥–∞—Ç–∞
    diploma_pdf = fields.Binary(string="–î–∏–ø–ª–æ–º")
    diploma_filename = fields.Char()

    attachment_pdf = fields.Binary(string="–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
    attachment_filename = fields.Char()

    identity_pdf = fields.Binary(string="–£–î–û")
    identity_filename = fields.Char()

    resume_pdf = fields.Binary(string="–†–µ–∑—é–º–µ")
    resume_filename = fields.Char()

    certificate_pdf = fields.Binary(string="–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")
    certificate_filename = fields.Char()

    registration_address = fields.Char(string="–ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    residence_address = fields.Char(string="–ê–¥—Ä–µ—Å –ø—Ä–æ–∂–∏–≤–∞–Ω–∏—è")

    email = fields.Char(string="–ü–æ—á—Ç–∞")
    phone = fields.Char(string="–¢–µ–ª–µ—Ñ–æ–Ω")

    bank_details_pdf = fields.Char(string="–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã")

    def write(self, vals):
        result = super().write(vals)

        stage = self.env.ref('hr_custom.hr_stage_documents', raise_if_not_found=False)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –Ω—É–∂–Ω–∞—è —Å—Ç–∞–¥–∏—è
        if stage and vals.get('stage_id') == stage.id:
            for record in self:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email
                self.env['mail.mail'].create({
                    'subject': '–°–æ–±—Ä–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã',
                    'body_html': '<p>–°–æ–±—Ä–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã</p>',
                    'email_to': 'anuarmoldakhmetov1917@gmail.com',
                    'email_from': self.env.user.email or 'noreply@example.com',
                }).send()

        return result
